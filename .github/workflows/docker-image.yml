name: Docker Image CI
permissions:
  contents: write
concurrency:
  group: ${{ github.workflow }}
on:
  push:
    branches: [ main ]
    
  workflow_dispatch:
    inputs:
      pushImage:
        description: Publish image to repository
        type: boolean
        required: true
        default: true

env:
  REGISTRY: ghcr.io
  DOCKERHUB_USERNAME: stianhg

jobs:         
  build_publish:
    name: Build and publish image
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write
      
    steps:
      - name: Set environment variables
        id: set-variables
        run: |
          echo "REPOSITORY=ghcr.io/$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"
          echo "IMAGE=deploymenttest" >> "$GITHUB_OUTPUT"
          echo "VERSION=$(echo ${GITHUB_REF#refs/tags/})" >> "$GITHUB_OUTPUT"
          echo "CREATED=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> "$GITHUB_OUTPUT"          

      - name: Env variable output
        id: test-variables
        run: |
          echo ${{ steps.set-variables.outputs.REPOSITORY }}
          echo ${{ steps.set-variables.outputs.IMAGE }}
          echo ${{ steps.set-variables.outputs.VERSION }}
          echo ${{ steps.set-variables.outputs.CREATED }}  
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

    #  - name: Get previous tag
    #    id: previoustag
    #    uses: 'WyriHaximus/github-action-get-previous-tag@v1'
    #    env:
    #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

     # - name: Get next minor version
     #   id: semver
     #   uses: 'WyriHaximus/github-action-next-semvers@v1'
     #   with:
     #     version: ${{ steps.previoustag.outputs.tag }}
     
      - name: Get versions (dryRun)
        id: taggerDryRun
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DRY_RUN: true

      - name: echo new tag
        run: |
          echo "The next tag version will be: ${{ steps.taggerDryRun.outputs.new_tag }}"
      - name: echo tag
        run: |
          echo "The current tag is: ${{ steps.taggerDryRun.outputs.tag }}"
      - name: echo part
        run: |
          echo "The version increment was: ${{ steps.taggerDryRun.outputs.part }}"

      - name: Get versions (final)
        id: taggerFinal
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username:  ${{ github.actor}}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ github.repository }}
            ${{ env.REGISTRY }}/${{ github.repository }}       
          tags: |
            type=semver,pattern={{raw}}
            type=sha
                  
      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: .github/Dockerfile
          push: true
          tags: |            
            ${{ env.REGISTRY }}/${{ github.repository }}:latest
            ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}     
          
    #  - name: Create release
    #    id: create_release_id
    #    uses: actions/create-release@v1
    #    env:
    #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #    with:
    #      tag_name: ${{ steps.semver.outputs.patch }}
    #      release_name: Release ${{ steps.semver.outputs.patch }}
